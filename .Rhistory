p <- ggplot(df,aes(x = conservative, y = labour, label = feature))  +
geom_text(aes(label=feature,position="jitter"),size = 4,angle=45,position = position_jitter(width=5, height=5)) +
coord_trans(xtrans = 'log10',ytrans = 'log10') + theme_bw()
p
df$feature <- mapvalues(df$feature, from = c("number_of.austerity.", "number_of.businesses.",
"number_of.cameron.","number_of.chaos.",
"number_of.conservative.","number_of.crisis.",
"number_of.cuts.","number_of.economy.",
"number_of.end.","number_of.income.",
"number_of.jobs.","number_of.labour.",
"number_of.register.","number_of.scrap.",
"number_of.taxes.","number_of.tories.",
"number_of.unemployment.","number_of.vote."),
to = c("austerity.", "businesses",
"cameron","chaos",
"conservative","crisis",
"cuts","economy",
"end","income",
"jobs","labour",
"register","scrap",
"taxes","tories",
"unemployment","vote")
)
rm(list=ls())
require(ggplot2)
require(plyr)
require(randomForest)
require(wordcloud)
require(reshape2)
#load the trained classifier and features labels
load(file = "rf_party_classifier.rda")
features <- row.names(importance(final.model))
data <- read.csv('features_and_party_labels_grouped_by_mp.csv')
data <- subset(data, select = c("party",features))
df <- ddply(data,.(party),colwise(sum))
#melt(df, id.vars = "FactorB", measure.vars = c("Group1", "Group2"))
#melt(df, id.vars = "party")
# first remember the names
n <- names(df)
# transpose all but the first column (name)
df<- as.data.frame(t(df[,-1]))
colnames(df) <- n
df$feature <- factor(row.names(df))
str(df) # Check the column types
names(df) <- c("conservative","labour","feature")
df$feature <- mapvalues(df$feature, from = c("number_of.austerity.", "number_of.businesses.",
"number_of.cameron.","number_of.chaos.",
"number_of.conservative.","number_of.crisis.",
"number_of.cuts.","number_of.economy.",
"number_of.end.","number_of.income.",
"number_of.jobs.","number_of.labour.",
"number_of.register.","number_of.scrap.",
"number_of.taxes.","number_of.tories.",
"number_of.unemployment.","number_of.vote."),
to = c("austerity.", "businesses",
"cameron","chaos",
"conservative","crisis",
"cuts","economy",
"end","income",
"jobs","labour",
"register","scrap",
"taxes","tories",
"unemployment","vote")
)
p <- ggplot(df,aes(x = conservative, y = labour, label = feature))  +
geom_text(aes(label=feature,position="jitter"),size = 4,angle=45,position = position_jitter(width=5, height=5)) +
coord_trans(xtrans = 'log10',ytrans = 'log10') + theme_bw()
p
geom_text(aes(colour = value),
size = 2.5, fontface = "bold",
vjust = 0,
position = position_jitter(width=5, height=0)
rm(list=ls())
require(ggplot2)
require(plyr)
require(randomForest)
require(wordcloud)
require(reshape2)
#load the trained classifier and features labels
load(file = "rf_party_classifier.rda")
features <- row.names(importance(final.model))
data <- read.csv('features_and_party_labels_grouped_by_mp.csv')
data <- subset(data, select = c("party",features))
df <- ddply(data,.(party),colwise(sum))
#melt(df, id.vars = "FactorB", measure.vars = c("Group1", "Group2"))
#melt(df, id.vars = "party")
# first remember the names
n <- names(df)
# transpose all but the first column (name)
df<- as.data.frame(t(df[,-1]))
colnames(df) <- n
df$feature <- factor(row.names(df))
str(df) # Check the column types
names(df) <- c("conservative","labour","feature")
df$feature <- mapvalues(df$feature, from = c("number_of.austerity.", "number_of.businesses.",
"number_of.cameron.","number_of.chaos.",
"number_of.conservative.","number_of.crisis.",
"number_of.cuts.","number_of.economy.",
"number_of.end.","number_of.income.",
"number_of.jobs.","number_of.labour.",
"number_of.register.","number_of.scrap.",
"number_of.taxes.","number_of.tories.",
"number_of.unemployment.","number_of.vote."),
to = c("austerity", "businesses",
"cameron","chaos",
"conservative","crisis",
"cuts","economy",
"end","income",
"jobs","labour",
"register","scrap",
"taxes","tories",
"unemployment","vote")
)
p <- ggplot(df,aes(x = conservative, y = labour, label = feature))  +
geom_text(aes(label=feature,position="jitter"),size = 4,angle=45,position = position_jitter(width=5, height=5)) +
coord_trans(xtrans = 'log10',ytrans = 'log10') + theme_bw()
p
geom_text(aes(colour = value),
size = 2.5, fontface = "bold",
vjust = 0,
position = position_jitter(width=5, height=0)
p <- ggplot(df,aes(labour) + geom_histogram(aes(x = feature))
p
p <- ggplot(df,aes(labour) + geom_histogram(aes(x = feature))
p
p <- ggplot(df,aes(labour)) + geom_histogram(aes(x = feature))
p
p <- ggplot(df,aes(y=labour)) + geom_histogram(aes(x = feature))
p
p <- ggplot(df,aes(y=labour)) + geom_bar(aes(x = feature))
p
p <- ggplot(df, aes(x = factor(feature), y = labour)) + geom_bar(stat = "identity")
p
df
melt(df)
df <- melt(df)
names(df) <- c("feature","party","feature_count")
p <- ggplot(df, aes(x = factor(feature), y = feature_count, fill=party)) + geom_bar(stat = "identity")
p
p <- ggplot(df, aes(x = factor(feature), y = feature_count, fill=party)) + geom_bar(stat = "identity",position="dodge")
p
p <- ggplot(df, aes(x = factor(feature), y = feature_count, fill=party)) +
geom_bar(stat = "identity",position="dodge") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
p
names(df) <- c("feature","party","feature_count")
p <- ggplot(df, aes(x = factor(feature), y = feature_count, fill=party)) +
geom_bar(stat = "identity",position="dodge") +
theme(axis.text.x = element_text(angle = 45, hjust = 1,size=6))
p
names(df) <- c("feature","party","feature_count")
p <- ggplot(df, aes(x = factor(feature), y = feature_count, fill=party)) +
geom_bar(stat = "identity",position="dodge") +
theme(axis.text.x = element_text(angle = 45, hjust = 1,size=12))
p
df <- melt(df)
names(df) <- c("feature","party","feature_count")
p <- ggplot(df, aes(x = factor(feature), y = feature_count, fill=party)) +
geom_bar(stat = "identity",position="dodge") +
theme(axis.text.x = element_text(angle = 45, hjust = 1,size=12)) +
theme_bw()
p
df <- melt(df)
names(df) <- c("feature","party","feature_count")
p <- ggplot(df, aes(x = factor(feature), y = feature_count, fill=party)) +
geom_bar(stat = "identity",position="dodge") +
theme(axis.text.x = element_text(angle = 45, hjust = 1,size=12)) +
p
df <- melt(df)
names(df) <- c("feature","party","feature_count")
p <- ggplot(df, aes(x = factor(feature), y = feature_count, fill=party)) +
geom_bar(stat = "identity",position="dodge") +
theme(axis.text.x = element_text(angle = 45, hjust = 1,size=12)) +
p
names(df) <- c("feature","party","feature_count")
p <- ggplot(df, aes(x = factor(feature), y = feature_count, fill=party)) +
geom_bar(stat = "identity",position="dodge") +
theme(axis.text.x = element_text(angle = 45, hjust = 1,size=12))
p
rm(list=ls())
require(ggplot2)
require(plyr)
require(randomForest)
require(wordcloud)
require(reshape2)
#load the trained classifier and features labels
load(file = "rf_party_classifier.rda")
features <- row.names(importance(final.model))
data <- read.csv('features_and_party_labels_grouped_by_mp.csv')
data <- subset(data, select = c("party",features))
df <- ddply(data,.(party),colwise(sum))
#melt(df, id.vars = "FactorB", measure.vars = c("Group1", "Group2"))
#melt(df, id.vars = "party")
# first remember the names
n <- names(df)
# transpose all but the first column (name)
df<- as.data.frame(t(df[,-1]))
colnames(df) <- n
df$feature <- factor(row.names(df))
str(df) # Check the column types
names(df) <- c("conservative","labour","feature")
df$feature <- mapvalues(df$feature, from = c("number_of.austerity.", "number_of.businesses.",
"number_of.cameron.","number_of.chaos.",
"number_of.conservative.","number_of.crisis.",
"number_of.cuts.","number_of.economy.",
"number_of.end.","number_of.income.",
"number_of.jobs.","number_of.labour.",
"number_of.register.","number_of.scrap.",
"number_of.taxes.","number_of.tories.",
"number_of.unemployment.","number_of.vote."),
to = c("austerity", "businesses",
"cameron","chaos",
"conservative","crisis",
"cuts","economy",
"end","income",
"jobs","labour",
"register","scrap",
"taxes","tories",
"unemployment","vote")
)
p <- ggplot(df,aes(x = conservative, y = labour, label = feature))  +
geom_text(aes(label=feature,position="jitter"),size = 4,angle=45,position = position_jitter(width=5, height=5)) +
coord_trans(xtrans = 'log10',ytrans = 'log10') + theme_bw()
p
df <- melt(df)
names(df) <- c("feature","party","feature_count")
p <- ggplot(df, aes(x = factor(feature), y = feature_count, fill=party)) +
geom_bar(stat = "identity",position="dodge") +
theme(axis.text.x = element_text(angle = 45, hjust = 1,size=12))
p
df$ratio <- df$labour/df$conservative
df
df <- melt(df)
names(df) <- c("feature","party","feature_count")
p <- ggplot(df, aes(x = factor(feature), y = feature_count, fill=party)) +
geom_bar(stat = "identity",position="dodge") +
theme(axis.text.x = element_text(angle = 45, hjust = 1,size=12))
p
rm(list=ls())
require(ggplot2)
require(plyr)
require(randomForest)
require(wordcloud)
require(reshape2)
#load the trained classifier and features labels
load(file = "rf_party_classifier.rda")
features <- row.names(importance(final.model))
data <- read.csv('features_and_party_labels_grouped_by_mp.csv')
data <- subset(data, select = c("party",features))
df <- ddply(data,.(party),colwise(sum))
#melt(df, id.vars = "FactorB", measure.vars = c("Group1", "Group2"))
#melt(df, id.vars = "party")
# first remember the names
n <- names(df)
# transpose all but the first column (name)
df<- as.data.frame(t(df[,-1]))
colnames(df) <- n
df$feature <- factor(row.names(df))
str(df) # Check the column types
names(df) <- c("conservative","labour","feature")
df$feature <- mapvalues(df$feature, from = c("number_of.austerity.", "number_of.businesses.",
"number_of.cameron.","number_of.chaos.",
"number_of.conservative.","number_of.crisis.",
"number_of.cuts.","number_of.economy.",
"number_of.end.","number_of.income.",
"number_of.jobs.","number_of.labour.",
"number_of.register.","number_of.scrap.",
"number_of.taxes.","number_of.tories.",
"number_of.unemployment.","number_of.vote."),
to = c("austerity", "businesses",
"cameron","chaos",
"conservative","crisis",
"cuts","economy",
"end","income",
"jobs","labour",
"register","scrap",
"taxes","tories",
"unemployment","vote")
)
p <- ggplot(df,aes(x = conservative, y = labour, label = feature))  +
geom_text(aes(label=feature,position="jitter"),size = 4,angle=45,position = position_jitter(width=5, height=5)) +
coord_trans(xtrans = 'log10',ytrans = 'log10') + theme_bw()
p
df <- melt(df)
names(df) <- c("feature","party","feature_count")
p <- ggplot(df, aes(x = factor(feature), y = feature_count, fill=party)) +
geom_bar(stat = "identity",position="dodge") +
theme(axis.text.x = element_text(angle = 45, hjust = 1,size=12))
p
df
lab <- subset(df,party=labour)
cons <- subset(df,party=conservative)
lab
lab <- subset(df,party==labour)
cons <- subset(df,party==conservative)
df
cons <- subset(df,party==conservative)
df$party
lab <- subset(df,party==labour)
lab <- subset(df,party=="labour")
cons <- subset(df,party=="conservative")
lab
names(lab)
ratio <- data.frame(lab$feature,lab$feature_count/conservative$feature_count)
ratio <- data.frame(lab$feature,lab$feature_count/cons$feature_count)
ratio
names(ratio) <- c("feature","lab.to.cons")
ggplot(data=ratio, aes(x=feature, y=lab.to.cons)) +
geom_point(aes(size=lab.to.cons)) +
scale_size_continuous(range=c(2,15)) +
theme(legend.position = "none")
p
ggplot(data=ratio, aes(x=feature, y=lab.to.cons)) +
geom_point(aes(size=lab.to.cons)) +
scale_size_continuous(range=c(2,15)) +
theme(legend.position = "none")
p
ggplot(data=ratio, aes(x=feature, y=lab.to.cons)) +
geom_point(aes(size=lab.to.cons)) +
scale_size_continuous(range=c(2,15)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1,size=12))
p
ggplot(data=ratio, aes(x=feature, y=lab.to.cons)) +
geom_point(aes(size=lab.to.cons)) +
scale_size_continuous(range=c(2,15)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1,size=12))
p
ggplot(data=ratio, aes(x=feature, y=lab.to.cons)) +
geom_point(aes(size=lab.to.cons)) +
scale_size_continuous(range=c(2,15)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1,size=12,(legend.position = "none"))
p
ggplot(data=ratio, aes(x=feature, y=lab.to.cons)) +
geom_point(aes(size=lab.to.cons)) +
scale_size_continuous(range=c(2,15)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1,size=12,legend.position = "none"))
p
p <- ggplot(df, aes(x = factor(feature), y = feature_count, fill=party)) +
geom_bar(stat = "identity",position="dodge") +
theme(axis.text.x = element_text(angle = 45, hjust = 1,size=12))
p
ggplot(data=ratio, aes(x=feature, y=lab.to.cons)) +
geom_point(aes(size=lab.to.cons)) +
scale_size_continuous(range=c(2,15)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1,size=12,legend.position = "none"))
p
ggplot(data=ratio, aes(x=feature, y=lab.to.cons)) +
geom_point(aes(size=lab.to.cons)) +
scale_size_continuous(range=c(2,15)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1,size=12),legend.position = "none")
p
arrange(ratio,desc(lab.to.cons))
ratio <- arrange(ratio,desc(lab.to.cons))
################ bubble chart
ggplot(data=ratio, aes(x=feature, y=lab.to.cons)) +
geom_point(aes(size=lab.to.cons)) +
scale_size_continuous(range=c(2,15)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1,size=12),legend.position = "none")
p
ratio
ggplot(data=ratio, aes(x=factor(feature), y=lab.to.cons)) +
geom_point(aes(size=lab.to.cons)) +
scale_size_continuous(range=c(2,15)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1,size=12),legend.position = "none")
p
ggplot(data=ratio, aes(x=factor(feature), y=lab.to.cons,fill=color)) +
geom_point(aes(size=lab.to.cons)) +
scale_size_continuous(range=c(2,15)) +
scale_x_discrete(limits=c(8,4,6))
theme(axis.text.x = element_text(angle = 45, hjust = 1,size=12),legend.position = "none")
p
rm(list=ls())
rm(list=ls())
require(ggplot2)
require(plyr)
require(randomForest)
require(wordcloud)
require(reshape2)
#load the trained classifier and features labels
load(file = "rf_party_classifier.rda")
features <- row.names(importance(final.model))
data <- read.csv('features_and_party_labels_grouped_by_mp.csv')
data <- subset(data, select = c("party",features))
df <- ddply(data,.(party),colwise(sum))
#melt(df, id.vars = "FactorB", measure.vars = c("Group1", "Group2"))
#melt(df, id.vars = "party")
# first remember the names
n <- names(df)
# transpose all but the first column (name)
df<- as.data.frame(t(df[,-1]))
colnames(df) <- n
df$feature <- factor(row.names(df))
str(df) # Check the column types
names(df) <- c("conservative","labour","feature")
df$feature <- mapvalues(df$feature, from = c("number_of.austerity.", "number_of.businesses.",
"number_of.cameron.","number_of.chaos.",
"number_of.conservative.","number_of.crisis.",
"number_of.cuts.","number_of.economy.",
"number_of.end.","number_of.income.",
"number_of.jobs.","number_of.labour.",
"number_of.register.","number_of.scrap.",
"number_of.taxes.","number_of.tories.",
"number_of.unemployment.","number_of.vote."),
to = c("austerity", "businesses",
"cameron","chaos",
"conservative","crisis",
"cuts","economy",
"end","income",
"jobs","labour",
"register","scrap",
"taxes","tories",
"unemployment","vote")
)
################ text plot
p <- ggplot(df,aes(x = conservative, y = labour, label = feature))  +
geom_text(aes(label=feature,position="jitter"),size = 4,angle=45,position = position_jitter(width=5, height=5)) +
coord_trans(xtrans = 'log10',ytrans = 'log10') + theme_bw()
p
################ bar plot
df <- melt(df)
#names(df) <- c("feature","party","feature_count")
#p <- ggplot(df, aes(x = factor(feature), y = feature_count, fill=party)) +
#  geom_bar(stat = "identity",position="dodge") +
#  theme(axis.text.x = element_text(angle = 45, hjust = 1,size=12))
#p
lab <- subset(df,party=="labour")
cons <- subset(df,party=="conservative")
ratio <- data.frame(lab$feature,lab$feature_count/cons$feature_count)
names(ratio) <- c("feature","lab.to.cons")
ratio.df <- arrange(ratio,desc(lab.to.cons))
#map ratio to color
ratio.df$color <- unlist(lapply(ratio.df$lab.to.cons,function(x) {if(x < 1) "red" else "blue"}))
################ bubble chart
ggplot(data=ratio, aes(x=factor(feature), y=lab.to.cons,fill=color)) +
geom_point(aes(size=lab.to.cons)) +
scale_size_continuous(range=c(2,15)) +
scale_x_discrete(limits=c(8,4,6))
theme(axis.text.x = element_text(angle = 45, hjust = 1,size=12),legend.position = "none")
p
ggplot(data=ratio, aes(x=factor(feature), y=lab.to.cons,fill=color)) +
geom_point(aes(size=lab.to.cons)) +
scale_size_continuous(range=c(2,15)) +
scale_x_discrete(limits=c(8,4,6))
theme(axis.text.x = element_text(angle = 45, hjust = 1,size=12),legend.position = "none")
p
rm(list=ls())
require(ggplot2)
require(plyr)
require(randomForest)
require(wordcloud)
require(reshape2)
#load the trained classifier and features labels
load(file = "rf_party_classifier.rda")
features <- row.names(importance(final.model))
data <- read.csv('features_and_party_labels_grouped_by_mp.csv')
data <- subset(data, select = c("party",features))
df <- ddply(data,.(party),colwise(sum))
#melt(df, id.vars = "FactorB", measure.vars = c("Group1", "Group2"))
#melt(df, id.vars = "party")
# first remember the names
n <- names(df)
# transpose all but the first column (name)
df<- as.data.frame(t(df[,-1]))
colnames(df) <- n
df$feature <- factor(row.names(df))
str(df) # Check the column types
names(df) <- c("conservative","labour","feature")
df$feature <- mapvalues(df$feature, from = c("number_of.austerity.", "number_of.businesses.",
"number_of.cameron.","number_of.chaos.",
"number_of.conservative.","number_of.crisis.",
"number_of.cuts.","number_of.economy.",
"number_of.end.","number_of.income.",
"number_of.jobs.","number_of.labour.",
"number_of.register.","number_of.scrap.",
"number_of.taxes.","number_of.tories.",
"number_of.unemployment.","number_of.vote."),
to = c("austerity", "businesses",
"cameron","chaos",
"conservative","crisis",
"cuts","economy",
"end","income",
"jobs","labour",
"register","scrap",
"taxes","tories",
"unemployment","vote")
)
################ text plot ################
p <- ggplot(df,aes(x = conservative, y = labour, label = feature))  +
geom_text(aes(label=feature,position="jitter"),size = 4,angle=45,position = position_jitter(width=5, height=5)) +
coord_trans(xtrans = 'log10',ytrans = 'log10') + theme_bw()
p
################ bar plot
df <- melt(df)
#names(df) <- c("feature","party","feature_count")
#p <- ggplot(df, aes(x = factor(feature), y = feature_count, fill=party)) +
#  geom_bar(stat = "identity",position="dodge") +
#  theme(axis.text.x = element_text(angle = 45, hjust = 1,size=12))
#p
lab <- subset(df,party=="labour")
cons <- subset(df,party=="conservative")
ratio <- data.frame(lab$feature,lab$feature_count/cons$feature_count)
names(ratio) <- c("feature","lab.to.cons")
ratio.df <- arrange(ratio,desc(lab.to.cons))
#map ratio to color
ratio.df$color <- unlist(lapply(ratio.df$lab.to.cons,function(x) {if(x < 1) "red" else "blue"}))
################ bubble chart
ggplot(data=ratio, aes(x=factor(feature), y=lab.to.cons,fill=color)) +
geom_point(aes(size=lab.to.cons)) +
scale_size_continuous(range=c(2,15)) +
scale_x_discrete(limits=c(8,4,6))
theme(axis.text.x = element_text(angle = 45, hjust = 1,size=12),legend.position = "none")
p
